// Code generated from /home/dmitry/Code/go/src/ses_query/grammar/SESParser.g4 by ANTLR 4.10.1. DO NOT EDIT.

package antlr_parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SESParserLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var sesparserlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func sesparserlexerLexerInit() {
	staticData := &sesparserlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "'.'", "'('",
		"')'", "'{'", "'}'", "','", "';'", "'+'", "'*'",
	}
	staticData.symbolicNames = []string{
		"", "WS", "LINE_COMMENT", "SPACE", "EVENT", "SKIP_", "WITHIN", "THEN",
		"WHERE", "AND", "OR", "GROUP", "DATE_UNIT", "OP_LOGICAL", "DOT", "L_BRACKET",
		"R_BRACKET", "L_CURLY_BRACKET", "R_CURLY_BRACKET", "COMMA", "SEMI",
		"PLUS", "ASTERISK", "NUMBER", "STRING", "ID",
	}
	staticData.ruleNames = []string{
		"WS", "LINE_COMMENT", "SPACE", "EVENT", "SKIP_", "WITHIN", "THEN", "WHERE",
		"AND", "OR", "GROUP", "DATE_UNIT", "OP_LOGICAL", "DOT", "L_BRACKET",
		"R_BRACKET", "L_CURLY_BRACKET", "R_CURLY_BRACKET", "COMMA", "SEMI",
		"PLUS", "ASTERISK", "NUMBER", "STRING", "ID", "EQ", "RE_EQ", "NEQ",
		"GT", "GTE", "LT", "LTE", "QUARTER", "YEAR", "MONTH", "WEEK", "DAY",
		"HOUR", "MINUTE", "SECOND", "MICROSECOND", "DQUOTA_STRING", "SQUOTA_STRING",
		"DIGIT", "SIGN", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K",
		"L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y",
		"Z",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 25, 457, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 1, 0, 4, 0, 145, 8, 0, 11, 0,
		12, 0, 146, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 155, 8, 1, 10, 1,
		12, 1, 158, 9, 1, 1, 1, 3, 1, 161, 8, 1, 1, 1, 1, 1, 3, 1, 165, 8, 1, 1,
		1, 1, 1, 1, 2, 4, 2, 170, 8, 2, 11, 2, 12, 2, 171, 1, 3, 1, 3, 1, 3, 1,
		3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1,
		5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1,
		7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1,
		11, 1, 11, 1, 11, 1, 11, 1, 11, 3, 11, 228, 8, 11, 1, 12, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 12, 1, 12, 3, 12, 237, 8, 12, 1, 13, 1, 13, 1, 14, 1,
		14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19,
		1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 4, 22, 258, 8, 22, 11, 22, 12, 22, 259,
		1, 22, 1, 22, 4, 22, 264, 8, 22, 11, 22, 12, 22, 265, 3, 22, 268, 8, 22,
		1, 23, 1, 23, 3, 23, 272, 8, 23, 1, 24, 1, 24, 5, 24, 276, 8, 24, 10, 24,
		12, 24, 279, 9, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1,
		27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 3, 32, 307, 8,
		32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 3, 33, 314, 8, 33, 1, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 3, 34, 322, 8, 34, 1, 35, 1, 35, 1, 35, 1,
		35, 1, 35, 3, 35, 329, 8, 35, 1, 36, 1, 36, 1, 36, 1, 36, 3, 36, 335, 8,
		36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 3, 37, 342, 8, 37, 1, 38, 1, 38,
		1, 38, 1, 38, 1, 38, 1, 38, 1, 38, 3, 38, 351, 8, 38, 1, 39, 1, 39, 1,
		39, 1, 39, 1, 39, 1, 39, 1, 39, 3, 39, 360, 8, 39, 1, 40, 1, 40, 1, 40,
		1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 3, 40, 374,
		8, 40, 1, 41, 1, 41, 1, 41, 1, 41, 1, 41, 1, 41, 5, 41, 382, 8, 41, 10,
		41, 12, 41, 385, 9, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42,
		1, 42, 5, 42, 395, 8, 42, 10, 42, 12, 42, 398, 9, 42, 1, 42, 1, 42, 1,
		43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48,
		1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1,
		53, 1, 54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 57, 1, 57, 1, 58, 1, 58,
		1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1,
		64, 1, 64, 1, 65, 1, 65, 1, 66, 1, 66, 1, 67, 1, 67, 1, 68, 1, 68, 1, 69,
		1, 69, 1, 70, 1, 70, 0, 0, 71, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13,
		7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16,
		33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25,
		51, 0, 53, 0, 55, 0, 57, 0, 59, 0, 61, 0, 63, 0, 65, 0, 67, 0, 69, 0, 71,
		0, 73, 0, 75, 0, 77, 0, 79, 0, 81, 0, 83, 0, 85, 0, 87, 0, 89, 0, 91, 0,
		93, 0, 95, 0, 97, 0, 99, 0, 101, 0, 103, 0, 105, 0, 107, 0, 109, 0, 111,
		0, 113, 0, 115, 0, 117, 0, 119, 0, 121, 0, 123, 0, 125, 0, 127, 0, 129,
		0, 131, 0, 133, 0, 135, 0, 137, 0, 139, 0, 141, 0, 1, 0, 34, 3, 0, 9, 10,
		13, 13, 32, 32, 2, 0, 10, 10, 13, 13, 3, 0, 65, 90, 95, 95, 97, 122, 4,
		0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 34, 34, 92, 92, 2, 0, 39, 39,
		92, 92, 1, 0, 48, 57, 2, 0, 43, 43, 45, 45, 2, 0, 65, 65, 97, 97, 2, 0,
		66, 66, 98, 98, 2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100, 100, 2, 0, 69,
		69, 101, 101, 2, 0, 70, 70, 102, 102, 2, 0, 71, 71, 103, 103, 2, 0, 72,
		72, 104, 104, 2, 0, 73, 73, 105, 105, 2, 0, 74, 74, 106, 106, 2, 0, 75,
		75, 107, 107, 2, 0, 76, 76, 108, 108, 2, 0, 77, 77, 109, 109, 2, 0, 78,
		78, 110, 110, 2, 0, 79, 79, 111, 111, 2, 0, 80, 80, 112, 112, 2, 0, 81,
		81, 113, 113, 2, 0, 82, 82, 114, 114, 2, 0, 83, 83, 115, 115, 2, 0, 84,
		84, 116, 116, 2, 0, 85, 85, 117, 117, 2, 0, 86, 86, 118, 118, 2, 0, 87,
		87, 119, 119, 2, 0, 88, 88, 120, 120, 2, 0, 89, 89, 121, 121, 2, 0, 90,
		90, 122, 122, 449, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0,
		0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0,
		0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0,
		0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1,
		0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37,
		1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0,
		45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 1, 144, 1, 0, 0,
		0, 3, 150, 1, 0, 0, 0, 5, 169, 1, 0, 0, 0, 7, 173, 1, 0, 0, 0, 9, 179,
		1, 0, 0, 0, 11, 184, 1, 0, 0, 0, 13, 191, 1, 0, 0, 0, 15, 196, 1, 0, 0,
		0, 17, 202, 1, 0, 0, 0, 19, 206, 1, 0, 0, 0, 21, 209, 1, 0, 0, 0, 23, 227,
		1, 0, 0, 0, 25, 236, 1, 0, 0, 0, 27, 238, 1, 0, 0, 0, 29, 240, 1, 0, 0,
		0, 31, 242, 1, 0, 0, 0, 33, 244, 1, 0, 0, 0, 35, 246, 1, 0, 0, 0, 37, 248,
		1, 0, 0, 0, 39, 250, 1, 0, 0, 0, 41, 252, 1, 0, 0, 0, 43, 254, 1, 0, 0,
		0, 45, 257, 1, 0, 0, 0, 47, 271, 1, 0, 0, 0, 49, 273, 1, 0, 0, 0, 51, 280,
		1, 0, 0, 0, 53, 282, 1, 0, 0, 0, 55, 285, 1, 0, 0, 0, 57, 288, 1, 0, 0,
		0, 59, 290, 1, 0, 0, 0, 61, 293, 1, 0, 0, 0, 63, 295, 1, 0, 0, 0, 65, 298,
		1, 0, 0, 0, 67, 308, 1, 0, 0, 0, 69, 315, 1, 0, 0, 0, 71, 323, 1, 0, 0,
		0, 73, 330, 1, 0, 0, 0, 75, 336, 1, 0, 0, 0, 77, 343, 1, 0, 0, 0, 79, 352,
		1, 0, 0, 0, 81, 361, 1, 0, 0, 0, 83, 375, 1, 0, 0, 0, 85, 388, 1, 0, 0,
		0, 87, 401, 1, 0, 0, 0, 89, 403, 1, 0, 0, 0, 91, 405, 1, 0, 0, 0, 93, 407,
		1, 0, 0, 0, 95, 409, 1, 0, 0, 0, 97, 411, 1, 0, 0, 0, 99, 413, 1, 0, 0,
		0, 101, 415, 1, 0, 0, 0, 103, 417, 1, 0, 0, 0, 105, 419, 1, 0, 0, 0, 107,
		421, 1, 0, 0, 0, 109, 423, 1, 0, 0, 0, 111, 425, 1, 0, 0, 0, 113, 427,
		1, 0, 0, 0, 115, 429, 1, 0, 0, 0, 117, 431, 1, 0, 0, 0, 119, 433, 1, 0,
		0, 0, 121, 435, 1, 0, 0, 0, 123, 437, 1, 0, 0, 0, 125, 439, 1, 0, 0, 0,
		127, 441, 1, 0, 0, 0, 129, 443, 1, 0, 0, 0, 131, 445, 1, 0, 0, 0, 133,
		447, 1, 0, 0, 0, 135, 449, 1, 0, 0, 0, 137, 451, 1, 0, 0, 0, 139, 453,
		1, 0, 0, 0, 141, 455, 1, 0, 0, 0, 143, 145, 7, 0, 0, 0, 144, 143, 1, 0,
		0, 0, 145, 146, 1, 0, 0, 0, 146, 144, 1, 0, 0, 0, 146, 147, 1, 0, 0, 0,
		147, 148, 1, 0, 0, 0, 148, 149, 6, 0, 0, 0, 149, 2, 1, 0, 0, 0, 150, 151,
		5, 47, 0, 0, 151, 152, 5, 47, 0, 0, 152, 156, 1, 0, 0, 0, 153, 155, 8,
		1, 0, 0, 154, 153, 1, 0, 0, 0, 155, 158, 1, 0, 0, 0, 156, 154, 1, 0, 0,
		0, 156, 157, 1, 0, 0, 0, 157, 164, 1, 0, 0, 0, 158, 156, 1, 0, 0, 0, 159,
		161, 5, 13, 0, 0, 160, 159, 1, 0, 0, 0, 160, 161, 1, 0, 0, 0, 161, 162,
		1, 0, 0, 0, 162, 165, 5, 10, 0, 0, 163, 165, 5, 0, 0, 1, 164, 160, 1, 0,
		0, 0, 164, 163, 1, 0, 0, 0, 165, 166, 1, 0, 0, 0, 166, 167, 6, 1, 0, 0,
		167, 4, 1, 0, 0, 0, 168, 170, 7, 0, 0, 0, 169, 168, 1, 0, 0, 0, 170, 171,
		1, 0, 0, 0, 171, 169, 1, 0, 0, 0, 171, 172, 1, 0, 0, 0, 172, 6, 1, 0, 0,
		0, 173, 174, 3, 99, 49, 0, 174, 175, 3, 133, 66, 0, 175, 176, 3, 99, 49,
		0, 176, 177, 3, 117, 58, 0, 177, 178, 3, 129, 64, 0, 178, 8, 1, 0, 0, 0,
		179, 180, 3, 127, 63, 0, 180, 181, 3, 111, 55, 0, 181, 182, 3, 107, 53,
		0, 182, 183, 3, 121, 60, 0, 183, 10, 1, 0, 0, 0, 184, 185, 3, 135, 67,
		0, 185, 186, 3, 107, 53, 0, 186, 187, 3, 129, 64, 0, 187, 188, 3, 105,
		52, 0, 188, 189, 3, 107, 53, 0, 189, 190, 3, 117, 58, 0, 190, 12, 1, 0,
		0, 0, 191, 192, 3, 129, 64, 0, 192, 193, 3, 105, 52, 0, 193, 194, 3, 99,
		49, 0, 194, 195, 3, 117, 58, 0, 195, 14, 1, 0, 0, 0, 196, 197, 3, 135,
		67, 0, 197, 198, 3, 105, 52, 0, 198, 199, 3, 99, 49, 0, 199, 200, 3, 125,
		62, 0, 200, 201, 3, 99, 49, 0, 201, 16, 1, 0, 0, 0, 202, 203, 3, 91, 45,
		0, 203, 204, 3, 117, 58, 0, 204, 205, 3, 97, 48, 0, 205, 18, 1, 0, 0, 0,
		206, 207, 3, 119, 59, 0, 207, 208, 3, 125, 62, 0, 208, 20, 1, 0, 0, 0,
		209, 210, 3, 103, 51, 0, 210, 211, 3, 125, 62, 0, 211, 212, 3, 119, 59,
		0, 212, 213, 3, 131, 65, 0, 213, 214, 3, 121, 60, 0, 214, 215, 3, 5, 2,
		0, 215, 216, 3, 93, 46, 0, 216, 217, 3, 139, 69, 0, 217, 22, 1, 0, 0, 0,
		218, 228, 3, 65, 32, 0, 219, 228, 3, 67, 33, 0, 220, 228, 3, 69, 34, 0,
		221, 228, 3, 71, 35, 0, 222, 228, 3, 73, 36, 0, 223, 228, 3, 75, 37, 0,
		224, 228, 3, 77, 38, 0, 225, 228, 3, 79, 39, 0, 226, 228, 3, 81, 40, 0,
		227, 218, 1, 0, 0, 0, 227, 219, 1, 0, 0, 0, 227, 220, 1, 0, 0, 0, 227,
		221, 1, 0, 0, 0, 227, 222, 1, 0, 0, 0, 227, 223, 1, 0, 0, 0, 227, 224,
		1, 0, 0, 0, 227, 225, 1, 0, 0, 0, 227, 226, 1, 0, 0, 0, 228, 24, 1, 0,
		0, 0, 229, 237, 3, 51, 25, 0, 230, 237, 3, 55, 27, 0, 231, 237, 3, 53,
		26, 0, 232, 237, 3, 57, 28, 0, 233, 237, 3, 59, 29, 0, 234, 237, 3, 61,
		30, 0, 235, 237, 3, 63, 31, 0, 236, 229, 1, 0, 0, 0, 236, 230, 1, 0, 0,
		0, 236, 231, 1, 0, 0, 0, 236, 232, 1, 0, 0, 0, 236, 233, 1, 0, 0, 0, 236,
		234, 1, 0, 0, 0, 236, 235, 1, 0, 0, 0, 237, 26, 1, 0, 0, 0, 238, 239, 5,
		46, 0, 0, 239, 28, 1, 0, 0, 0, 240, 241, 5, 40, 0, 0, 241, 30, 1, 0, 0,
		0, 242, 243, 5, 41, 0, 0, 243, 32, 1, 0, 0, 0, 244, 245, 5, 123, 0, 0,
		245, 34, 1, 0, 0, 0, 246, 247, 5, 125, 0, 0, 247, 36, 1, 0, 0, 0, 248,
		249, 5, 44, 0, 0, 249, 38, 1, 0, 0, 0, 250, 251, 5, 59, 0, 0, 251, 40,
		1, 0, 0, 0, 252, 253, 5, 43, 0, 0, 253, 42, 1, 0, 0, 0, 254, 255, 5, 42,
		0, 0, 255, 44, 1, 0, 0, 0, 256, 258, 3, 87, 43, 0, 257, 256, 1, 0, 0, 0,
		258, 259, 1, 0, 0, 0, 259, 257, 1, 0, 0, 0, 259, 260, 1, 0, 0, 0, 260,
		267, 1, 0, 0, 0, 261, 263, 3, 27, 13, 0, 262, 264, 3, 87, 43, 0, 263, 262,
		1, 0, 0, 0, 264, 265, 1, 0, 0, 0, 265, 263, 1, 0, 0, 0, 265, 266, 1, 0,
		0, 0, 266, 268, 1, 0, 0, 0, 267, 261, 1, 0, 0, 0, 267, 268, 1, 0, 0, 0,
		268, 46, 1, 0, 0, 0, 269, 272, 3, 83, 41, 0, 270, 272, 3, 85, 42, 0, 271,
		269, 1, 0, 0, 0, 271, 270, 1, 0, 0, 0, 272, 48, 1, 0, 0, 0, 273, 277, 7,
		2, 0, 0, 274, 276, 7, 3, 0, 0, 275, 274, 1, 0, 0, 0, 276, 279, 1, 0, 0,
		0, 277, 275, 1, 0, 0, 0, 277, 278, 1, 0, 0, 0, 278, 50, 1, 0, 0, 0, 279,
		277, 1, 0, 0, 0, 280, 281, 5, 61, 0, 0, 281, 52, 1, 0, 0, 0, 282, 283,
		5, 126, 0, 0, 283, 284, 5, 61, 0, 0, 284, 54, 1, 0, 0, 0, 285, 286, 5,
		33, 0, 0, 286, 287, 5, 61, 0, 0, 287, 56, 1, 0, 0, 0, 288, 289, 5, 62,
		0, 0, 289, 58, 1, 0, 0, 0, 290, 291, 5, 62, 0, 0, 291, 292, 5, 61, 0, 0,
		292, 60, 1, 0, 0, 0, 293, 294, 5, 60, 0, 0, 294, 62, 1, 0, 0, 0, 295, 296,
		5, 60, 0, 0, 296, 297, 5, 61, 0, 0, 297, 64, 1, 0, 0, 0, 298, 299, 3, 123,
		61, 0, 299, 300, 3, 131, 65, 0, 300, 301, 3, 91, 45, 0, 301, 302, 3, 125,
		62, 0, 302, 303, 3, 129, 64, 0, 303, 304, 3, 99, 49, 0, 304, 306, 3, 125,
		62, 0, 305, 307, 3, 127, 63, 0, 306, 305, 1, 0, 0, 0, 306, 307, 1, 0, 0,
		0, 307, 66, 1, 0, 0, 0, 308, 309, 3, 139, 69, 0, 309, 310, 3, 99, 49, 0,
		310, 311, 3, 91, 45, 0, 311, 313, 3, 125, 62, 0, 312, 314, 3, 127, 63,
		0, 313, 312, 1, 0, 0, 0, 313, 314, 1, 0, 0, 0, 314, 68, 1, 0, 0, 0, 315,
		316, 3, 115, 57, 0, 316, 317, 3, 119, 59, 0, 317, 318, 3, 117, 58, 0, 318,
		319, 3, 129, 64, 0, 319, 321, 3, 105, 52, 0, 320, 322, 3, 127, 63, 0, 321,
		320, 1, 0, 0, 0, 321, 322, 1, 0, 0, 0, 322, 70, 1, 0, 0, 0, 323, 324, 3,
		135, 67, 0, 324, 325, 3, 99, 49, 0, 325, 326, 3, 99, 49, 0, 326, 328, 3,
		111, 55, 0, 327, 329, 3, 127, 63, 0, 328, 327, 1, 0, 0, 0, 328, 329, 1,
		0, 0, 0, 329, 72, 1, 0, 0, 0, 330, 331, 3, 97, 48, 0, 331, 332, 3, 91,
		45, 0, 332, 334, 3, 139, 69, 0, 333, 335, 3, 127, 63, 0, 334, 333, 1, 0,
		0, 0, 334, 335, 1, 0, 0, 0, 335, 74, 1, 0, 0, 0, 336, 337, 3, 105, 52,
		0, 337, 338, 3, 119, 59, 0, 338, 339, 3, 131, 65, 0, 339, 341, 3, 125,
		62, 0, 340, 342, 3, 127, 63, 0, 341, 340, 1, 0, 0, 0, 341, 342, 1, 0, 0,
		0, 342, 76, 1, 0, 0, 0, 343, 344, 3, 115, 57, 0, 344, 345, 3, 107, 53,
		0, 345, 346, 3, 117, 58, 0, 346, 347, 3, 131, 65, 0, 347, 348, 3, 129,
		64, 0, 348, 350, 3, 99, 49, 0, 349, 351, 3, 127, 63, 0, 350, 349, 1, 0,
		0, 0, 350, 351, 1, 0, 0, 0, 351, 78, 1, 0, 0, 0, 352, 353, 3, 127, 63,
		0, 353, 354, 3, 99, 49, 0, 354, 355, 3, 95, 47, 0, 355, 356, 3, 119, 59,
		0, 356, 357, 3, 117, 58, 0, 357, 359, 3, 97, 48, 0, 358, 360, 3, 127, 63,
		0, 359, 358, 1, 0, 0, 0, 359, 360, 1, 0, 0, 0, 360, 80, 1, 0, 0, 0, 361,
		362, 3, 115, 57, 0, 362, 363, 3, 107, 53, 0, 363, 364, 3, 95, 47, 0, 364,
		365, 3, 125, 62, 0, 365, 366, 3, 119, 59, 0, 366, 367, 3, 127, 63, 0, 367,
		368, 3, 99, 49, 0, 368, 369, 3, 95, 47, 0, 369, 370, 3, 119, 59, 0, 370,
		371, 3, 117, 58, 0, 371, 373, 3, 97, 48, 0, 372, 374, 3, 127, 63, 0, 373,
		372, 1, 0, 0, 0, 373, 374, 1, 0, 0, 0, 374, 82, 1, 0, 0, 0, 375, 383, 5,
		34, 0, 0, 376, 377, 5, 92, 0, 0, 377, 382, 9, 0, 0, 0, 378, 379, 5, 34,
		0, 0, 379, 382, 5, 34, 0, 0, 380, 382, 8, 4, 0, 0, 381, 376, 1, 0, 0, 0,
		381, 378, 1, 0, 0, 0, 381, 380, 1, 0, 0, 0, 382, 385, 1, 0, 0, 0, 383,
		381, 1, 0, 0, 0, 383, 384, 1, 0, 0, 0, 384, 386, 1, 0, 0, 0, 385, 383,
		1, 0, 0, 0, 386, 387, 5, 34, 0, 0, 387, 84, 1, 0, 0, 0, 388, 396, 5, 39,
		0, 0, 389, 390, 5, 92, 0, 0, 390, 395, 9, 0, 0, 0, 391, 392, 5, 39, 0,
		0, 392, 395, 5, 39, 0, 0, 393, 395, 8, 5, 0, 0, 394, 389, 1, 0, 0, 0, 394,
		391, 1, 0, 0, 0, 394, 393, 1, 0, 0, 0, 395, 398, 1, 0, 0, 0, 396, 394,
		1, 0, 0, 0, 396, 397, 1, 0, 0, 0, 397, 399, 1, 0, 0, 0, 398, 396, 1, 0,
		0, 0, 399, 400, 5, 39, 0, 0, 400, 86, 1, 0, 0, 0, 401, 402, 7, 6, 0, 0,
		402, 88, 1, 0, 0, 0, 403, 404, 7, 7, 0, 0, 404, 90, 1, 0, 0, 0, 405, 406,
		7, 8, 0, 0, 406, 92, 1, 0, 0, 0, 407, 408, 7, 9, 0, 0, 408, 94, 1, 0, 0,
		0, 409, 410, 7, 10, 0, 0, 410, 96, 1, 0, 0, 0, 411, 412, 7, 11, 0, 0, 412,
		98, 1, 0, 0, 0, 413, 414, 7, 12, 0, 0, 414, 100, 1, 0, 0, 0, 415, 416,
		7, 13, 0, 0, 416, 102, 1, 0, 0, 0, 417, 418, 7, 14, 0, 0, 418, 104, 1,
		0, 0, 0, 419, 420, 7, 15, 0, 0, 420, 106, 1, 0, 0, 0, 421, 422, 7, 16,
		0, 0, 422, 108, 1, 0, 0, 0, 423, 424, 7, 17, 0, 0, 424, 110, 1, 0, 0, 0,
		425, 426, 7, 18, 0, 0, 426, 112, 1, 0, 0, 0, 427, 428, 7, 19, 0, 0, 428,
		114, 1, 0, 0, 0, 429, 430, 7, 20, 0, 0, 430, 116, 1, 0, 0, 0, 431, 432,
		7, 21, 0, 0, 432, 118, 1, 0, 0, 0, 433, 434, 7, 22, 0, 0, 434, 120, 1,
		0, 0, 0, 435, 436, 7, 23, 0, 0, 436, 122, 1, 0, 0, 0, 437, 438, 7, 24,
		0, 0, 438, 124, 1, 0, 0, 0, 439, 440, 7, 25, 0, 0, 440, 126, 1, 0, 0, 0,
		441, 442, 7, 26, 0, 0, 442, 128, 1, 0, 0, 0, 443, 444, 7, 27, 0, 0, 444,
		130, 1, 0, 0, 0, 445, 446, 7, 28, 0, 0, 446, 132, 1, 0, 0, 0, 447, 448,
		7, 29, 0, 0, 448, 134, 1, 0, 0, 0, 449, 450, 7, 30, 0, 0, 450, 136, 1,
		0, 0, 0, 451, 452, 7, 31, 0, 0, 452, 138, 1, 0, 0, 0, 453, 454, 7, 32,
		0, 0, 454, 140, 1, 0, 0, 0, 455, 456, 7, 33, 0, 0, 456, 142, 1, 0, 0, 0,
		26, 0, 146, 156, 160, 164, 171, 227, 236, 259, 265, 267, 271, 277, 306,
		313, 321, 328, 334, 341, 350, 359, 373, 381, 383, 394, 396, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SESParserLexerInit initializes any static state used to implement SESParserLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSESParserLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SESParserLexerInit() {
	staticData := &sesparserlexerLexerStaticData
	staticData.once.Do(sesparserlexerLexerInit)
}

// NewSESParserLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSESParserLexer(input antlr.CharStream) *SESParserLexer {
	SESParserLexerInit()
	l := new(SESParserLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &sesparserlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "SESParser.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SESParserLexer tokens.
const (
	SESParserLexerWS              = 1
	SESParserLexerLINE_COMMENT    = 2
	SESParserLexerSPACE           = 3
	SESParserLexerEVENT           = 4
	SESParserLexerSKIP_           = 5
	SESParserLexerWITHIN          = 6
	SESParserLexerTHEN            = 7
	SESParserLexerWHERE           = 8
	SESParserLexerAND             = 9
	SESParserLexerOR              = 10
	SESParserLexerGROUP           = 11
	SESParserLexerDATE_UNIT       = 12
	SESParserLexerOP_LOGICAL      = 13
	SESParserLexerDOT             = 14
	SESParserLexerL_BRACKET       = 15
	SESParserLexerR_BRACKET       = 16
	SESParserLexerL_CURLY_BRACKET = 17
	SESParserLexerR_CURLY_BRACKET = 18
	SESParserLexerCOMMA           = 19
	SESParserLexerSEMI            = 20
	SESParserLexerPLUS            = 21
	SESParserLexerASTERISK        = 22
	SESParserLexerNUMBER          = 23
	SESParserLexerSTRING          = 24
	SESParserLexerID              = 25
)
